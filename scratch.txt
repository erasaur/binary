clean up returnError stuff in permissions (dont need it i think)

purpose of $not: $in vs $nin? same with key:{$in: [oneItem]} vs just plain key:oneItem
is session.set('currenttopic') necessary?

+ stats.topicsCount
+ stats.commentsCount
- activity.likes -> stats.reputation
- activity.liked -> activity.upvotedComments
- activity.following -> activity.followingUsers

method 1:
establish non-reactive query for comments in topic (so liking a comment wont make it shoot to the top)
- maybe use a method instead of subscription to pull down data? store in session var 
manually observe 'added' for comments, and push new documents to publication (so users can see their comments being added)

method 2:
render a static template?


table {
  border-spacing: 0
}

tr.replies-bottom {
  border: 20px solid ____
  border-top, left: 0
  border-radius: 8
}

.replies-bottom td { //causes some ugly darkening due to color overlap, might have to do some color mixing
  background-color: ____
  border-bottom-left-radius: 16px
}

alternatively, use a gradient for the border (bg color of next row -> transparent)
or, use an image that can be colored with css filters

alternative:
tr.replies-bottom {
  display: table;
  float: left;
  width: 200%;
  background: rgba(21, 204, 245, 0.3);
}
.replies-bottom td:left {
  display: table-row;
}
.replies-bottom td:right { 
  border: solid 10px transparent
  background-color: rgb(151, 72, 37)
  border-bottom-left-radius: 16px
  border-bottom-right-radius: 16px
}








border: solid 5px transparent;
    border-style: solid none;
    border-top: none;
    background-color: rgb(113, 201, 230);
    border-right: none;
    border-bottom-right-radius: 8px;


if user has 10 new updates, and we're planning on only storing 5, send only the 5 newest updates.

**** maybe remove the notifications model, and put all of them into the user document? take advantage of mongodb "indexing" (search by current user _id rather than by notification's "user" entry), reduce number of publishes/subs

notification system:
- circle next to name showing notifications.find(user).count()
- 4 categories of notifications
-- for each one, if only 1 notification, then display something like: user1 posted in/replied to your topic/comment
-- if 2+ notifications, then something like: 2 people posted in/replied to your topic/comment 

- for meteor user:
-- notifications field:
  - replies:
  -- list of notification ids for when users reply to user's comments
  - topics/posts:
  -- list of ids for new topics/posts created by people user is following
  - comments:
  -- list of ids for new comments on topics created by user
  - follows:
  -- list of people who just followed you

- whenever someone comments on comment you posted (for example), update the notifications collection where the user is the comment owner (if they are not viewing the current page) and insert info about {person who posted that reply, type of notification (in this case, comment reply -- will be used later to format the message shown to the user), boolean of read to false}
- when the notification page is viewed, all the notifications are marked as "read" (and perhaps delete notifications after 3 days)